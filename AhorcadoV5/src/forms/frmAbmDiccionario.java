/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import Entidades.Diccionario;
import Entidades.Palabra;
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.Point;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;

/**
 *
 * @author luloop
 */
public class frmAbmDiccionario extends javax.swing.JDialog
{

    Diccionario diccionarioEntero;
    boolean isDialog = false;
    boolean isCancel = false;
    Container cp;

    public frmAbmDiccionario(java.awt.Frame parent, boolean modal)
    {

        super(parent, modal);
        this.setContentPane(new JLabel(new ImageIcon("fondoDICC.jpg")));
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        lblTitulo = new javax.swing.JLabel();
        panelSeleccion = new javax.swing.JPanel();
        btnXML1 = new javax.swing.JButton();
        radioModifi = new javax.swing.JRadioButton();
        radiobaja = new javax.swing.JRadioButton();
        radioAlta = new javax.swing.JRadioButton();
        btnAceptar = new javax.swing.JButton();
        PanelABM = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 102));
        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Rockwell Condensed", 0, 48)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        panelSeleccion.setOpaque(false);

        btnXML1.setForeground(new java.awt.Color(255, 255, 255));
        btnXML1.setBorder(null);
        btnXML1.setBorderPainted(false);
        btnXML1.setContentAreaFilled(false);
        btnXML1.setFocusPainted(false);
        btnXML1.setMaximumSize(new java.awt.Dimension(121, 35));
        btnXML1.setMinimumSize(new java.awt.Dimension(121, 35));
        btnXML1.setPreferredSize(new java.awt.Dimension(121, 35));
        btnXML1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnXML1ActionPerformed(evt);
            }
        });

        radioModifi.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        radioModifi.setForeground(new java.awt.Color(255, 255, 255));
        radioModifi.setText("Modificacion");
        radioModifi.setFocusPainted(false);
        radioModifi.setOpaque(false);
        radioModifi.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                radioModifiMouseClicked(evt);
            }
        });

        radiobaja.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        radiobaja.setForeground(new java.awt.Color(255, 255, 255));
        radiobaja.setText("Baja");
        radiobaja.setFocusPainted(false);
        radiobaja.setOpaque(false);
        radiobaja.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                radiobajaMouseClicked(evt);
            }
        });

        radioAlta.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        radioAlta.setForeground(new java.awt.Color(255, 255, 255));
        radioAlta.setText("Alta");
        radioAlta.setFocusPainted(false);
        radioAlta.setOpaque(false);
        radioAlta.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                radioAltaMouseClicked(evt);
            }
        });

        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setBorder(null);
        btnAceptar.setBorderPainted(false);
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setFocusPainted(false);
        btnAceptar.setMaximumSize(new java.awt.Dimension(121, 35));
        btnAceptar.setMinimumSize(new java.awt.Dimension(121, 35));
        btnAceptar.setPreferredSize(new java.awt.Dimension(121, 35));
        btnAceptar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSeleccionLayout = new javax.swing.GroupLayout(panelSeleccion);
        panelSeleccion.setLayout(panelSeleccionLayout);
        panelSeleccionLayout.setHorizontalGroup(
            panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(panelSeleccionLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(radioAlta, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addGap(42, 42, 42)
                .addComponent(radiobaja, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addComponent(radioModifi, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelSeleccionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXML1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        panelSeleccionLayout.setVerticalGroup(
            panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeleccionLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(radioModifi)
                    .addComponent(radiobaja)
                    .addComponent(radioAlta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(panelSeleccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXML1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        PanelABM.setAlignmentX(1.0F);
        PanelABM.setAlignmentY(1.0F);
        PanelABM.setMaximumSize(new java.awt.Dimension(435, 200));
        PanelABM.setMinimumSize(new java.awt.Dimension(435, 200));
        PanelABM.setOpaque(false);
        PanelABM.setPreferredSize(new java.awt.Dimension(435, 200));
        PanelABM.setRequestFocusEnabled(false);
        PanelABM.addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                PanelABMComponentShown(evt);
            }
        });

        javax.swing.GroupLayout PanelABMLayout = new javax.swing.GroupLayout(PanelABM);
        PanelABM.setLayout(PanelABMLayout);
        PanelABMLayout.setHorizontalGroup(
            PanelABMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
        );
        PanelABMLayout.setVerticalGroup(
            PanelABMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(PanelABM, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(panelSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(31, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelABM, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(106, 106, 106)
                    .addComponent(panelSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(82, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        this.lblTitulo.setIcon(new ImageIcon("diccionario-12.png"));

        this.PanelABM.setVisible(false);
        this.diccionarioEntero = Diccionario.cargarDiccionario(ahorcadov4.Ahorcadov4.DICC_ARCH);
        this.btnAceptar.setIcon(new ImageIcon("botones-13.png"));
        this.btnAceptar.setRolloverIcon(new ImageIcon("botones-14.png"));

        this.btnXML1.setIcon(new ImageIcon("botones-23.png"));
        this.btnXML1.setRolloverIcon(new ImageIcon("botones-24.png"));


    }//GEN-LAST:event_formWindowOpened

    private void radioAltaMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_radioAltaMouseClicked
    {//GEN-HEADEREND:event_radioAltaMouseClicked
        this.radioAlta.setSelected(true);
        this.radiobaja.setSelected(false);
        this.radioModifi.setSelected(false);
    }//GEN-LAST:event_radioAltaMouseClicked

    private void radiobajaMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_radiobajaMouseClicked
    {//GEN-HEADEREND:event_radiobajaMouseClicked
        this.radioAlta.setSelected(false);
        this.radiobaja.setSelected(true);
        this.radioModifi.setSelected(false);        // TODO add your handling code here:
    }//GEN-LAST:event_radiobajaMouseClicked

    private void radioModifiMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_radioModifiMouseClicked
    {//GEN-HEADEREND:event_radioModifiMouseClicked
        this.radioAlta.setSelected(false);
        this.radiobaja.setSelected(false);
        this.radioModifi.setSelected(true);        // TODO add your handling code here:
    }//GEN-LAST:event_radioModifiMouseClicked

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAceptarActionPerformed
    {//GEN-HEADEREND:event_btnAceptarActionPerformed
        if (radioAlta.isSelected() | radioModifi.isSelected() | this.radiobaja.isSelected())
        {
            this.panelSeleccion.setVisible(false);
            this.PanelABM.setVisible(true);
            iniciarPanel();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnXML1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnXML1ActionPerformed
    {//GEN-HEADEREND:event_btnXML1ActionPerformed
        frmArchivos archivo = new frmArchivos(null, true, ahorcadov4.Ahorcadov4.DICC_ARCH);
        archivo.setVisible(true);
        if (archivo.isIsDialog())
        {
            ahorcadov4.Ahorcadov4.cambiarNombreArchivoDiccionario(archivo.getNombreArchivoNUevo());
        }
        if(archivo.isIsCancel())
        {
            ahorcadov4.Ahorcadov4.cambiarNombreArchivoDiccionario(ahorcadov4.Ahorcadov4.DICC_ARCH);
        }
    }//GEN-LAST:event_btnXML1ActionPerformed

    private void PanelABMComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_PanelABMComponentShown
    {//GEN-HEADEREND:event_PanelABMComponentShown

    }//GEN-LAST:event_PanelABMComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
    {//GEN-HEADEREND:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(frmAbmDiccionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(frmAbmDiccionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(frmAbmDiccionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(frmAbmDiccionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                frmAbmDiccionario dialog = new frmAbmDiccionario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void iniciarPanel()
    {
        cp = PanelABM;
        GridLayout gr = new GridLayout(1, 1);
        cp.setLayout(gr);

        if (radioAlta.isSelected())
        {
            panelAlta alta = new panelAlta(this.diccionarioEntero);
            cp.add(alta);
            alta.setVisible(true);
            alta.addComponentListener(new ComponentListener()
            {
                @Override
                public void componentResized(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentMoved(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentShown(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentHidden(ComponentEvent e)
                {
                    mostrarPrincipio();
                }
            });
        }
        else if (radioModifi.isSelected())
        {
            panelModificar modifica = new panelModificar(this.diccionarioEntero);
            cp.add(modifica);
            modifica.setVisible(true);
            modifica.addComponentListener(new ComponentListener()
            {
                @Override
                public void componentResized(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentMoved(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentShown(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentHidden(ComponentEvent e)
                {
                    mostrarPrincipio();
                }
            });
        }
        else if (this.radiobaja.isSelected())
        {
            panelBaja baja = new panelBaja(this.diccionarioEntero);
            cp.add(baja);
            baja.setVisible(true);
            baja.addComponentListener(new ComponentListener()
            {
                @Override
                public void componentResized(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentMoved(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentShown(ComponentEvent e)
                {
                    // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }

                @Override
                public void componentHidden(ComponentEvent e)
                {
                    mostrarPrincipio();
                }
            });
        }
    }

    private void mostrarPrincipio()
    {
        this.dispose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelABM;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnXML1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panelSeleccion;
    private javax.swing.JRadioButton radioAlta;
    private javax.swing.JRadioButton radioModifi;
    private javax.swing.JRadioButton radiobaja;
    // End of variables declaration//GEN-END:variables
}
